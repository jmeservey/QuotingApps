[
  {
    "Id": "196622",
    "ThreadId": "58147",
    "Html": "<p>I'm not good writing english.</p>\r\n<p>This extensions it's very good, but I needed a new property to prevent it from leaving the container object.</p>\r\n<p>I modify the method OnDragging of the class DragBehaviour, to this:</p>\r\n<p>&lt;!--  p.MsoNormal \t{margin-bottom:.0001pt; \tfont-size:12.0pt; \tfont-family:&quot;Times New Roman&quot;; \t        margin-left: 0cm;             margin-right: 0cm;             margin-top: 0cm;         }         .style1         {             margin-left: 40px;         }         .style2         {             margin-left: 80px;         }      --&gt;</p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New';color:blue\" lang=EN-US>private</span><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US> <span style=\"color:blue\">static</span> <span style=\"color:blue\">void</span> OnDragging( <span style=\"color:blue\">object</span> sender, System.Windows.Input.<span style=\"color:#2B91AF\">MouseEventArgs</span> e )</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US>{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US> <span style=\"color:blue\">var</span> obj = sender <span style=\"color:blue\">as</span> <span style=\"color:#2B91AF\">DependencyObject</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US> <span style=\"color:blue\">if</span> ( !GetIsDragging( obj ) )</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US> <span style=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span> <span style=\"color:blue\">return</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US>&nbsp;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US> <span style=\"color:#2B91AF\">Point</span> pos = e.GetPosition( obj         <span style=\"color:blue\">as</span> <span style=\"color:#2B91AF\">IInputElement</span> );</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US><span style=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"color:blue\">double</span> horizontalChange = pos.X -          GetOriginalX( obj );</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US><span style=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"color:blue\">double</span> verticalChange = pos.Y -          GetOriginalY( obj );</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US>&nbsp;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US><span style=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"color:blue\">if</span> ( <span style=\"color:blue\">double</span>.IsNaN(          GetX( obj ) ) )</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US> <span style=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>SetX(obj,          0);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US> <span style=\"\">&nbsp;</span><span style=\"color:blue\">if</span> (         <span style=\"color:blue\">double</span>.IsNaN( GetY( obj ) ) )</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US> <span style=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>SetY( obj,          0 );</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US><span style=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US><span style=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"color:green\">//read the property</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US><span style=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"color:blue\">bool</span> onlyIn = GetOnlyIn(obj);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US>&nbsp;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US><span style=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"color:blue\">double</span> wContainer = 0;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US><span style=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"color:blue\">double</span> hContainer = 0;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US><span style=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"color:blue\">double</span> maxX = 0;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US><span style=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"color:blue\">double</span> maxY = 0;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US><span style=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"color:blue\">if</span> (onlyIn &amp;&amp; (sender         <span style=\"color:blue\">as</span> <span style=\"color:#2B91AF\">FrameworkElement</span>) !=         <span style=\"color:blue\">null</span> &amp;&amp; ((sender <span style=\"color:blue\">as</span> <span style=\"color:#2B91AF\">FrameworkElement</span>).Parent         <span style=\"color:blue\">as</span> <span style=\"color:#2B91AF\">FrameworkElement</span>)          != <span style=\"color:blue\">null</span>)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US><span style=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US> <span style=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>wContainer          = ((sender <span style=\"color:blue\">as</span> <span style=\"color:#2B91AF\"> FrameworkElement</span>).Parent <span style=\"color:blue\">as</span> <span style=\"color:#2B91AF\">FrameworkElement</span>).ActualWidth;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US><span style=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>hContainer = ((sender <span style=\"color:blue\">as</span> <span style=\"color:#2B91AF\">FrameworkElement</span>).Parent         <span style=\"color:blue\">as</span> <span style=\"color:#2B91AF\">FrameworkElement</span>).ActualHeight;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US><span style=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>maxX = wContainer - (sender <span style=\"color:blue\">as</span> <span style=\"color:#2B91AF\">FrameworkElement</span>).ActualWidth;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US><span style=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>maxY = hContainer - (sender <span style=\"color:blue\">as</span> <span style=\"color:#2B91AF\">FrameworkElement</span>).ActualHeight;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US> }</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US>&nbsp;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US> <span style=\"color:blue\">if</span> (<span style=\"color:blue\">double</span>.IsNaN(GetX(obj)))</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US> <span style=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>SetX(obj,          0);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US> <span style=\"color:blue\">if</span> (<span style=\"color:blue\">double</span>.IsNaN(GetY(obj)))</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US> SetY(obj, 0);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US>&nbsp;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US> <span style=\"color:blue\">double</span> newPosX = GetX(obj) + horizontalChange;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US><span style=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"color:blue\">double</span> newPosY = GetY(obj) + verticalChange;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US><span style=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>newPosX = (onlyIn &amp;&amp; (newPosX &lt; 0 || newPosX &gt; maxX)) ? newPosX &lt; 0 ? 0 :          maxX : newPosX;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US><span style=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>newPosY = (onlyIn &amp;&amp; (newPosY &lt; 0 || newPosY &gt; maxY)) ? newPosY &lt; 0 ? 0 :          maxY : newPosY;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US>&nbsp;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US><span style=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"color:green\">//move the object</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US> SetX(obj, newPosX);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US><span style=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>SetY(obj, newPosY);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US>&nbsp;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US><span style=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>e.Handled = <span style=\"color:blue\">true</span></span></p>\r\n<p><span style=\"font-size:8.0pt;font-family:'Courier New'\"> }</span></p>\r\n<p>And the new property:</p>\r\n<p><span style=\"font-size:8.0pt;font-family:'Courier New';color:blue\" lang=EN-US>public</span><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US> <span style=\"color:blue\">static</span> <span style=\"color:blue\"> readonly</span> <span style=\"color:#2B91AF\">DependencyProperty</span> OnlyInProperty = <span style=\"color:#2B91AF\">DependencyProperty</span>.RegisterAttached(<span style=\"color:#A31515\">&quot;OnlyIn&quot;</span>, <span style=\"color:blue\">typeof</span>(<span style=\"color:blue\">bool</span>), <span style=\"color:blue\">typeof</span>(<span style=\"color:#2B91AF\">DragBehaviour</span>), <span style=\"color:blue\">new</span> <span style=\"color:#2B91AF\">UIPropertyMetadata</span>(<span style=\"color:blue\">false</span>));</span></p>\r\n<p><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US>&nbsp;</span></p>\r\n<p><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US><span style=\"color:blue\">public</span> <span style=\"color:blue\"> static</span> <span style=\"color:blue\">bool</span> GetOnlyIn(<span style=\"color:#2B91AF\">DependencyObject</span> obj)</span></p>\r\n<p><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US>{</span></p>\r\n<p><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US> <span style=\"color:blue\">return</span> (<span style=\"color:blue\">bool</span>)obj.GetValue(OnlyInProperty);</span></p>\r\n<p><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US>}</span></p>\r\n<p><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US>&nbsp;</span></p>\r\n<p><span style=\"font-size:8.0pt;font-family:'Courier New'\" lang=EN-US><span style=\"color:blue\">public</span> <span style=\"color:blue\"> static</span> <span style=\"color:blue\">void</span> SetOnlyIn(<span style=\"color:#2B91AF\">DependencyObject</span> obj, <span style=\"color:blue\"> bool</span> value)</span></p>\r\n<p><span style=\"font-size:8.0pt;font-family:'Courier New'\"> {</span></p>\r\n<p><span style=\"font-size:8.0pt;font-family:'Courier New'\"> obj.SetValue(OnlyInProperty, value);</span></p>\r\n<p><span style=\"font-size:8.0pt;font-family:'Courier New'\"> }</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-family:'Segoe UI';font-size:13px\">And finally for testing, in the style XAML:<br></span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-family:'Courier New';font-size:11px\"></span></p>\r\n<p><span style=\"font-size:10.0pt;font-family:'Courier New';color:blue\" lang=EN-US>&lt;</span><span style=\"font-size:10.0pt;font-family:'Courier New';color:#A31515\" lang=EN-US>Setter</span><span style=\"font-size:10.0pt;font-family:'Courier New';color:red\" lang=EN-US> Property</span><span style=\"font-size:10.0pt;font-family:'Courier New';color:blue\" lang=EN-US>=&quot;extbehaviour:DragBehaviour.OnlyIn&quot; </span> <span style=\"font-size:10.0pt;font-family:'Courier New';color:red\" lang=EN-US>Value</span><span style=\"font-size:10.0pt;font-family:'Courier New';color:blue\" lang=EN-US>=&quot;True&quot; /&gt;</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-family:'Segoe UI';font-size:13px\">I changed this code for get out from my problem quickly,&nbsp;and I wanted to comment for consideration in your project.&nbsp;</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-family:'Segoe UI';font-size:13px\"><span style=\"font-family:-webkit-monospace;font-size:16px\">Greetings!</span><br></span></p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-06-01T17:25:28.73-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "196749",
    "ThreadId": "58147",
    "Html": "<p>Thanks, that's a great improvement, i will definitely add this to the source code...</p>\r\n<p>Thanks again!</p>",
    "PostedDate": "2009-06-02T02:22:54.15-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "486484",
    "ThreadId": "58147",
    "Html": "<p>I don't see this property in the current source code. Is it implemented? If so, is it named &quot;OnlyIn&quot;?</p>",
    "PostedDate": "2010-08-30T09:20:46.797-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]